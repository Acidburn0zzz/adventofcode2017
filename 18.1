#!/usr/bin/lua

local input = io.read("*all"):sub(1,-2)

local instructions = {}
local registers = setmetatable({}, {__index=function()return 0 end})
registers.pc = 1

for line in input:gmatch"[^\n]+" do
	local func = line:gmatch"[^ ]+"
	local inst = {}

	inst.op = func()
	inst.x = func()
	inst.y = func()

	instructions[#instructions + 1] = inst
end

local function processInst(registers)
	local inst = instructions[registers.pc]
	local xi = tonumber(inst.x) or tonumber(registers[inst.x])
	local yi = tonumber(inst.y) or tonumber(registers[inst.y])

	if inst.op == "set" then
		registers[inst.x] = yi
	end

	if inst.op == "add" then
		registers[inst.x] = registers[inst.x] + yi
	end

	if inst.op == "mul" then
		registers[inst.x] = registers[inst.x] * yi
	end

	if inst.op == "mod" then
		registers[inst.x] = registers[inst.x] % yi
	end

	if inst.op == "snd" then
		registers.freq = registers[inst.x]
	end

	if inst.op == "rcv" and xi ~= 0 then
		print(registers.freq)
		os.exit()
	end

	if inst.op == "jgz" and xi > 0 then
		registers.pc = registers.pc + yi
	else
		registers.pc = registers.pc + 1
	end
end

while registers.pc <= #instructions and registers.pc >= 1 do
	processInst(registers)
end
